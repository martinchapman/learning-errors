/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class de_libalf_jni_JNILearningAlgorithm */

#ifndef _Included_de_libalf_jni_JNILearningAlgorithm
#define _Included_de_libalf_jni_JNILearningAlgorithm
#ifdef __cplusplus
extern "C" {
#endif
#undef de_libalf_jni_JNILearningAlgorithm_serialVersionUID
#define de_libalf_jni_JNILearningAlgorithm_serialVersionUID 1LL
#undef de_libalf_jni_JNILearningAlgorithm_serialVersionUID
#define de_libalf_jni_JNILearningAlgorithm_serialVersionUID 2LL
/*
 * Class:     de_libalf_jni_JNILearningAlgorithm
 * Method:    add_counterexample
 * Signature: ([IJ)V
 */
JNIEXPORT void JNICALL Java_de_libalf_jni_JNILearningAlgorithm_add_1counterexample
  (JNIEnv *, jobject, jintArray, jlong);

/*
 * Class:     de_libalf_jni_JNILearningAlgorithm
 * Method:    advance
 * Signature: (J)Lde/libalf/BasicAutomaton;
 */
JNIEXPORT jobject JNICALL Java_de_libalf_jni_JNILearningAlgorithm_advance
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_libalf_jni_JNILearningAlgorithm
 * Method:    conjecture_ready
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_de_libalf_jni_JNILearningAlgorithm_conjecture_1ready
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_libalf_jni_JNILearningAlgorithm
 * Method:    get_alphabet_size
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_libalf_jni_JNILearningAlgorithm_get_1alphabet_1size
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_libalf_jni_JNILearningAlgorithm
 * Method:    increase_alphabet_size
 * Signature: (IJ)V
 */
JNIEXPORT void JNICALL Java_de_libalf_jni_JNILearningAlgorithm_increase_1alphabet_1size
  (JNIEnv *, jobject, jint, jlong);

/*
 * Class:     de_libalf_jni_JNILearningAlgorithm
 * Method:    set_alphabet_size
 * Signature: (IJ)V
 */
JNIEXPORT void JNICALL Java_de_libalf_jni_JNILearningAlgorithm_set_1alphabet_1size
  (JNIEnv *, jobject, jint, jlong);

/*
 * Class:     de_libalf_jni_JNILearningAlgorithm
 * Method:    set_knowledge_source
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_libalf_jni_JNILearningAlgorithm_set_1knowledge_1source
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_libalf_jni_JNILearningAlgorithm
 * Method:    set_knowledge_source_NULL
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_libalf_jni_JNILearningAlgorithm_set_1knowledge_1source_1NULL
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_libalf_jni_JNILearningAlgorithm
 * Method:    sync_to_knowledgebase
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_de_libalf_jni_JNILearningAlgorithm_sync_1to_1knowledgebase
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_libalf_jni_JNILearningAlgorithm
 * Method:    supports_sync
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_de_libalf_jni_JNILearningAlgorithm_supports_1sync
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_libalf_jni_JNILearningAlgorithm
 * Method:    serialize
 * Signature: (J)[I
 */
JNIEXPORT jintArray JNICALL Java_de_libalf_jni_JNILearningAlgorithm_serialize
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_libalf_jni_JNILearningAlgorithm
 * Method:    deserialize
 * Signature: ([IJ)Z
 */
JNIEXPORT jboolean JNICALL Java_de_libalf_jni_JNILearningAlgorithm_deserialize
  (JNIEnv *, jobject, jintArray, jlong);

/*
 * Class:     de_libalf_jni_JNILearningAlgorithm
 * Method:    set_logger
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_libalf_jni_JNILearningAlgorithm_set_1logger
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_libalf_jni_JNILearningAlgorithm
 * Method:    destroy
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_libalf_jni_JNILearningAlgorithm_destroy
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_libalf_jni_JNILearningAlgorithm
 * Method:    set_normalizer
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_de_libalf_jni_JNILearningAlgorithm_set_1normalizer
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     de_libalf_jni_JNILearningAlgorithm
 * Method:    set_normalizer_NULL
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_libalf_jni_JNILearningAlgorithm_set_1normalizer_1NULL
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_libalf_jni_JNILearningAlgorithm
 * Method:    remove_normalizer
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_libalf_jni_JNILearningAlgorithm_remove_1normalizer
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_libalf_jni_JNILearningAlgorithm
 * Method:    get_name
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_de_libalf_jni_JNILearningAlgorithm_get_1name
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_libalf_jni_JNILearningAlgorithm
 * Method:    tostring
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_de_libalf_jni_JNILearningAlgorithm_tostring
  (JNIEnv *, jobject, jlong);

#ifdef __cplusplus
}
#endif
#endif
