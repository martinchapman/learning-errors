digraph finite_automaton {
	graph[fontsize=8]
	rankdir=LR;
	size=8;

node [shape=rectangle, color = green, label= "Dominating edges: inspect, create_tree, free_tree, Learn_Assert"]; dom_edges;
	node [shape=doublecircle, style="", color=green, label = "D"]; q1;
	node [shape=circle, style="", color=green, label = D]; q0;
	node [shape=circle, style="", color=green, label = D]; q2;
	node [shape=circle, style="", color=green, label = D]; q3;
	node [shape=circle, style="", color=green, label = D]; q4;
	node [shape=plaintext, label="", style=""]; iq0;
	iq0 -> q0 [color=blue];
	q0 -> q0 [label="inspect", color = green];
	q0 -> q4 [label="create_tree", color = green];
	q0 -> q0 [label="if_line_42"];
	q0 -> q0 [label="free_tree", color = green];
	q0 -> q0 [label="Learn_Assert", color = green];
	q1 -> q0 [label="inspect", color = green];
	q1 -> q0 [label="create_tree", color = green];
	q1 -> q0 [label="if_line_42"];
	q1 -> q0 [label="free_tree", color = green];
	q1 -> q0 [label="Learn_Assert", color = green];
	q2 -> q0 [label="inspect", color = green];
	q2 -> q0 [label="create_tree", color = green];
	q2 -> q0 [label="if_line_42"];
	q2 -> q0 [label="free_tree", color = green];
	q2 -> q1 [label="Learn_Assert", color = green];
	q3 -> q0 [label="inspect", color = green];
	q3 -> q0 [label="create_tree", color = green];
	q3 -> q0 [label="if_line_42"];
	q3 -> q2 [label="free_tree", color = green];
	q3 -> q0 [label="Learn_Assert", color = green];
	q4 -> q3 [label="inspect", color = green];
	q4 -> q0 [label="create_tree", color = green];
	q4 -> q0 [label="if_line_42"];
	q4 -> q0 [label="free_tree", color = green];
	q4 -> q0 [label="Learn_Assert", color = green];
};
